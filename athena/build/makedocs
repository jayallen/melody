#!/usr/bin/perl -w
use strict;

use File::Temp qw( tempfile );
use lib 'lib';
use MT::Util qw( dirify );
my $Pod2html = '../tools/pod2html';

my @f = (
    [ 'mtmanual.pod', 'Movable Type User Manual' ],
    [ 'mtinstall.pod', 'Movable Type Installation Instructions' ],
    [ 'mtupgrade.pod', 'Movable Type Upgrading Instructions' ],
    [ 'mtchanges.pod', 'Movable Type Changelog' ],
    [ 'mtweblogs.pod', 'Movable Type weblogs.com ping' ],
    [ 'mttags.pod', 'Movable Type Templates' ],
    [ 'mtimport.pod', 'Movable Type Import Format' ],
    [ 'mt26.pod', 'Movable Type 2.6 Guide' ],
    [ 'mt30.pod', 'Movable Type 3.0 Guide' ],
    [ 'mt31.pod', 'Movable Type 3.1 Guide' ],
    [ 'plugin-tut.pod', 'How to Write a Plugin' ],
    [ 'known-issues.pod', 'Known Issues' ],
    [ 'mtauth.pod', 'Creating a Drop-in Authentication Service for Movable Type' ],
);

if (my $page = $ARGV[0]) {
    @f = grep { $_->[0] =~ /$page/ } @f;
}

my $do_send = 0;

my $COPY = <<HTML;
<hr size="1" color="#CCCCCC">
<span class="copyright">Copyright &copy; 2001-2007 Six Apart. All Rights Reserved.</span>
HTML

my %MANUAL_FILE_NAMES = (
    'TEMPLATE TAGS' => 'tags',
    'WEBLOG CONFIGURATION' => 'weblog_config',
);

my $docs_dir = (-r "mtmanual.pod") ? "" : "docs/";

die if $docs_dir;

for my $r (@f) {
    my $doc = $r->[0];
    print "Converting $doc... ";
    if ($doc eq 'mtmanual.pod') {
        print "\n";
        ## Split up the manual into =head1 blocks.
        open FH, "$docs_dir$doc" or die "Can't open '$doc': $!";
        local $/ = '=head1';
        my @idx;
        while (<FH>) {
            s!=head1$!!;
            next unless $_ =~ /\S/;
            $_ = '=head1' . $_;
            my($html) = $_ =~ /^=head1\s*(.+)/;
            my $page_name = $html;
            if ($MANUAL_FILE_NAMES{$html}) {
                $html = $MANUAL_FILE_NAMES{$html};
            } else {
                $html =~ s!\s.*$!!;
            }
            $html = 'mtmanual_' . dirify($html) . '.html';
            print "    $html\n";
            my($fh, $name) = tempfile('XXXX', DIR => '/tmp', SUFFIX => '.pod');
            print $fh $_;
            close $fh;
            system "cd $docs_dir" if $docs_dir;
            system "$Pod2html --css doc-styles.css --infile $name --outfile $html --podpath .";
            add_branding("$docs_dir$html", $r->[1] . ": " . $page_name, 1);
            unlink $name;

            open my $ifh, "$docs_dir$html" or die $!;
            my $c = do { local $/; <$ifh> };
            close $ifh;
            my($index) = $c =~ m!<a name="__index__"></a>\s+<ul>(.*?)\n</ul>!s;
            $index =~ s!href="!href="$html!g;
            push @idx, $index;
        }
        close FH;

        ## Now write index.
        open FH, ">" . $docs_dir . "mtmanual.html" or die $!;
        print FH <<INDEX;
<html>
<head>
<title>$r->[1]</title>
<link rel="stylesheet" href="doc-styles.css" type="text/css">
</head>

<body>

<a name="__index__"></a>
<ul>
@idx
</ul>

</body>
</html>
INDEX
        close FH;
        add_branding($docs_dir. "mtmanual.html", $r->[1]);

        my $html = 'mtmanual-full.html';
        ## First cd into 'docs' so that links between documents are correct.
        system "cd docs; $Pod2html --css doc-styles.css --infile $doc --outfile $html --podpath .";
        add_branding("$docs_dir$html", $r->[1]);
    } else {
        (my $html = $doc) =~ s!pod$!html!;
        ## First cd into 'docs' so that links between documents are correct.
        system "cd $docs_dir" if $docs_dir;
        system "$Pod2html --css doc-styles.css --infile $doc --outfile $html --podpath .";
        add_branding("$docs_dir$html", $r->[1]);
    }

    (my $txt = $doc) =~ s!pod$!txt!g;
    system "pod2text $docs_dir$doc > $docs_dir$txt";
    print "done\n" unless $doc eq 'mtmanual.pod';
}
system "rm ".$docs_dir."pod2htm*";

if ($do_send) {
    system "rsync --cvs-exclude -a -v $docs_dir rhumba:public_html/movable/docs";
}

sub add_branding {
    my($file, $title, $is_split_manual) = @_;
    local *FH;
    open FH, $file or die "Can't open '$file': $!";
    my $c = do { local $/; <FH> };
    close FH;
    if ($is_split_manual) {
        $c =~ s!<body>!<body>\n<h3>$title</h3>\n<p><a href="mtmanual.html">&laquo; Table of Contents</a></p>\n!;
    } else {
        $c =~ s!<body>!<body>\n<h3>$title</h3>\n!;
    }
    $c =~ s!</body>!$COPY</body>!;
    open FH, ">$file" or die "Can't open '$file': $!";
    print FH $c;
    close FH;
}

1;
