<mt:setvarblock name="page_title"><__trans phrase="Select a Style"></mt:setvarblock>
<mt:setvarblock name="html_head" append="1">

<!-- stylecatcher -->
<link rel="stylesheet" type="text/css" title="Default Layout" href="<mt:var name="plugin_static_uri">templates.css" />

<script type="text/javascript" src="<mt:var name="static_uri">js/tc/mixer.js"></script>
<script type="text/javascript" src="<mt:var name="static_uri">js/tc/mixer/tagmatch.js"></script>
<script type="text/javascript" src="<mt:var name="static_uri">js/tc/mixer/display.js"></script>
<script type="text/javascript" src="<mt:var name="static_uri">js/tc/client.js"></script>

<!-- javascripts for this page -->

<script type="text/javascript">
    var repoImg = "<mt:var name="plugin_static_uri">images/mixed-media.gif";
    var selected;
    var selected_blog_id;
    var mixer;          
    var matchCategory = /^category-/;
    var categories = [];
    var firstCategoryId;
    var repo_urls = {};
    var repos = [];

    TC.attachLoadEvent( init );

    function init() {
        initMixer();
        showDetails( false );

<mt:if name="themes_json">
        var data = <mt:var name="themes_json">;
        if (data.categories) {
            for (var i = 0; i < data.categories.length; i++)
                enableCategory(data.categories[i]);
        }
</mt:if>

        initCategories();
        chooseCategory( firstCategoryId );

        if (data.themes)
            loadThemes(data.themes, 'local');

        <mt:if name="auto_fetch">
        getStyles();
        </mt:if>
    }

    function enableCategory(cat) {
        mixer.addTagIndexDisplay('display-'+cat, 1000, 'collection:'+cat);
        var el = getByID('category-' + cat);
        if (el)
            el.style.display = 'block';
    }

    function initMixer()
    {
        mixer = new TC.Mixer();
        // initialize mixer object
        mixer.addSelectedDisplay( "display-details" );
    }

    function initCategories()
    {
        var element = getByID( "categories" );
        if( !element )
            return;
        
        categories.length = 0;
        var elements = element.childNodes;
        for( var i = 0; i < elements.length; i++ )
        {
            element = elements[ i ];
            var categoryId = element.id;
            if( !categoryId )
                continue;
            
            if( !firstCategoryId ) {
                if (element.style.display != 'none') {
                    firstCategoryId = categoryId;
                }
            }
            
            var displayId = categoryId.replace( matchCategory, "display-" );
            var display = getByID( displayId );

            element.onclick = chooseCategoryClosure( categoryId );
            TC.removeClassName( element, "category-selected" );

            categories[ categoryId ] =
            {
                "element" : element,
                "display" : display
            };
        }
    }

    function chooseCategoryClosure( categoryId )
    {
        var func = function() { return chooseCategory( categoryId ); };
        return func;
    }

    function chooseCategory( categoryId )
    {
        var titleElement = getByID( "selected-category-title" );
        
        for( var id in categories )
        {
            var element = categories[ id ].element;
            if (!element) continue;
            var display = categories[ id ].display;

            if( id == categoryId )
            {
                TC.addClassName( element, "category-selected" );
                display.style.display = "block";
                
                if( titleElement )
                    titleElement.innerHTML = trans(element.firstChild.nextSibling.innerHTML);
                if (element.title.match(/^https?:/)) {
                    var url_element = getByID("repo-url");
                    url_element.value = element.title;
                }
            }
            else
            {
                TC.removeClassName( element, "category-selected" );
                if (display) display.style.display = "none";
            }
        }

        mixer.display();
    }

    function showDetails( show )
    {
        var showElement = getByID( "show-details" );
        var hideElement = getByID( "hide-details" );
        var detailsElement = getByID( "details-wrapper" );
        var templatesElement = getByID( "templates-wrapper" );
        
        if( show )
        {
            showElement.style.display = "none";
            hideElement.style.display = "block";
            detailsElement.style.display = "block";
            TC.removeClassName( templatesElement, "templates-wrapper-wide" );
            TC.addClassName( templatesElement, "templates-wrapper-narrow" );
        }
        else
        {
            showElement.style.display = "block";
            hideElement.style.display = "none";
            detailsElement.style.display = "none";
            TC.addClassName( templatesElement, "templates-wrapper-wide" );
            TC.removeClassName( templatesElement, "templates-wrapper-narrow" );
        }
        
        return false;
    }

    function applyDesign() {
        // disable apply button; change text to "Applying..."
<mt:if name="single_blog">
        var blog_id = '<mt:var name="single_blog">';
<mt:else>
        var sel = getByID("select-blog");
        var blog_id = sel.options[sel.selectedIndex].value;
        if (!blog_id) {
            alert("<__trans phrase="Please select a weblog to apply this theme.">");
            return;
        }
</mt:if>
        var btn = getByID("apply-button");
        if (!btn) return;

        selected = mixer.name;
        if (!selected) {
            alert("<__trans phrase="Please click on a theme before attempting to apply a new design to your blog.">");
            return;
        }
        var url = mixer.entries[mixer.name].url;

        btn.disabled = true;
        btn.value = "<__trans phrase="Applying...">";
        selected_blog_id = blog_id;
        var client = TC.Client.call({
            'load': designApplied,
            'uri': '<mt:var name="script_url">',
            'method': 'POST',
            'arguments': {
                '__mode': 'stylecatcher_apply',
                'url': url,
                'magic_token': '<mt:var name="magic_token">',
                'blog_id': blog_id
            }
        });
    }

    function designApplied(client, result) {
        var btn = getByID("apply-button");
        var entry = mixer.entries[selected];
        if (entry) {
            // make this the new 'current' theme
            var found = false;
            for (var i = 0; i < entry.tags.length; i++) {
                if (entry.tags[i] == 'collection:current')
                    found = true;
            }
            if (!found)
                entry.tags[entry.tags.length] = 'collection:current';
            /* we need to add the blog id of the blog that was
               applied to for this entry */

            found = false;
            if (entry.blogs && entry.blogs.length) {
                for (var i = 0; i < entry.blogs.length; i++) {
                    if (entry.blogs[i] == selected_blog_id)
                        found = true;
                }
            }
            if (!found)
                entry.blogs[entry.blogs.length] = selected_blog_id;

            /* loop through all the 'current' themes and strip
               this blog id from any that don't match the
               selected theme */
            for (var i in mixer.entries) {
                if (i == selected)
                    continue;
                for (var j = 0; j < mixer.entries[i].blogs.length; j++) {
                    if (mixer.entries[i].blogs[j] == selected_blog_id) {
                        mixer.entries[i].blogs.splice(j,1);
                        break;
                    }
                }
                if (mixer.entries[i].blogs.length == 0) {
                    // no longer 'current'
                    for (var j = 0; j < mixer.entries[i].tags.length; j++) {
                        if (mixer.entries[i].tags[j] == 'collection:current') {
                            mixer.entries[i].tags.splice(j,1);
                            break;
                        }
                    }
                }
            }
            mixer.createTagIndexes();
            mixer.remix();
        }
        chooseCategory('category-current');
        if (!btn) return;
        btn.value = "<__trans phrase="Choose this Design">";
        btn.disabled = false;
        var res;
        try {
            res = eval('(' + result + ')');
        } catch (e) {
        }
        if (res && res.error) {
            alert("<__trans phrase="Error applying theme: ">" + res.error);
        } else {
            alert("<__trans phrase="The selected theme has been applied!">");
        }
    }

    function stylesLoaded(client, styles) {
        var btn = getByID("find-button");
        if (!btn) return;
        var repo_num;
        var cat;

        var data;
        try {
            data = eval('('+styles+')');
        } catch (e) {
            alert(trans("Error loading themes! -- [_1]", styles));
            btn.value = "<__trans phrase="Find Style">";
            btn.disabled = false;
            return;
        }
        log(data);
        if (data.repo) {
            url = data.repo['url'];
            if (repo_urls[url] != undefined) {
                repo_num = repo_urls[url];
                cat = 'repo_' + repo_num;
            } else {
                repo_num = repos.length;
                repo_urls[url] = repo_num;

                // new repo -- create new
                // category for it
                cat = 'repo_' + repo_num;
                createCategory(cat, data.repo['display_name'], url);
            }
            repos[repo_num] = url;
        }
        if (data.auto) {
            cat = 'more';
            enableCategory(cat);
        }
        chooseCategory('category-' + cat);
        if (data.themes)
            loadThemes(data.themes, cat);

        TC.addClassName(TC.elementOrId("loading-styles"), "hidden");
        TC.removeClassName(btn, "hidden");
    }

    function createCategory(cat_name, cat_title, url) {
        // things to create...
        //   #1: new scrollbox under id 'categories'
        /*
                <div class="category" id="category-repo" title="Remote Themes" style="display: none">
                    <img src="<mt:var name="plugin_static_uri">images/mixed-media.gif" alt="" /><span id="repo-name">Remote Themes</span>
                </div>
        */
        var cats = getByID("categories");

        element = document.createElement( "div" );
        element.title = url;
        element.className = "category";
        element.id = "category-" + cat_name;

        var img = document.createElement( "img" );
        img.src = repoImg;
        img.alt = "";
        element.appendChild( img );

        var spn = document.createElement( "span" );
        spn.appendChild( document.createTextNode( cat_title ) );
        element.appendChild( spn );

        cats.appendChild( element );

        //   #2: new div under id templates-wrapper
        /*
            <div class="scrollbox" id="display-repo" style="display: none;"></div>
        */

        var wrapper = getByID("templates-wrapper");

        var div = document.createElement( "div" );
        div.className = "scrollbox";
        div.id = "display-" + cat_name;
        wrapper.appendChild(div);
        element.onclick = chooseCategoryClosure( element.id );

        categories[ element.id ] =
        {
            "element" : element,
            "display" : div
        };

        enableCategory(cat_name);
    }

    function loadThemes(themes, prefix) {
        var names = {};
        for (var i = 0; i < themes.length; i++) {
            var name = prefix + '-' + themes[i]['name'];
            if (names[themes[i]['name']]) {
                names[themes[i]['name']]++;
                name += "_" + names[themes[i]['name']];
            } else {
                names[name] = 1;
            }
            themes[i]['name'] = name;
            themes[i].tags[themes[i].tags.length] = "collection:"+prefix;
            if (mixer.entries[name]) {
                // merge in tags
                var existing_tags = mixer.entries[name].tags;
                if (existing_tags && existing_tags.length) {
                    var new_tag_names = {};
                    for (var j in themes[i].tags)
                        new_tag_names[j] = true;
                    for (var j = 0; j < existing_tags.length; j++) {
                        if (!new_tag_names[existing_tags[j]]) {
                            themes[i].tags[themes[i].tags.length] = existing_tags[j];
                        }
                    }
                }
            } else {
                mixer.addEntries(themes[i]);
            }
        }
        mixer.display();
    }
    function getStyles() {
        var btn = getByID("find-button");
        if (!btn) return;
        TC.addClassName(btn, "hidden");
        TC.removeClassName(TC.elementOrId("loading-styles"), "hidden");

        var el = getByID('repo-url');
        if (!el) return;
        var url = el.value;
        var client = TC.Client.call({
            'load': stylesLoaded,
            'uri': '<mt:var name="script_url">',
            'method': 'POST',
            'arguments': {
                '__mode': 'stylecatcher_js',
                'url': url
            }
        });
    }
</script>
<!-- end stylecatcher script section -->
</mt:setvarblock>
<mt:include name="include/header.tmpl">

        <div id="wrapper">

<mt:if name="blog_loop">

           <form method="get" action="<mt:var name="script_url">">
                <strong><__trans phrase="Theme or Repository URL:"></strong>
                <input class="repo-url" style="width:350px;" name="url" id="repo-url" value="<mt:var name="last_theme_url">" />
                <input type="button" id="find-button" value="<__trans phrase="Download Styles">" onclick="getStyles()" />
                <span class="hidden" id="loading-styles">
                    <img src="<mt:var name="static_uri">images/indicator.white.gif" height="16" width="16" alt="" />
                    <__trans phrase="Loading...">
                </span>
           </form>

            <p id="status-message" class="message" style="display: none"></p>
            
            <div id="template-picker">
                <div id="categories-wrapper">
                    <h2><__trans phrase="Categories"></h2>
                    <div class="scrollbox" id="categories">
<mt:if name="single_blog">
                        <div class="category" id="category-current" title="<__trans phrase="Current theme for your weblog">" style="display: none"><img src="<mt:var name="plugin_static_uri">images/top-rated.gif" alt="Your Current Theme" /><span><__trans phrase="Current Theme"></span>
<mt:else>
                        <div class="category" id="category-current" title="<__trans phrase="Current themes for your weblogs">" style="display: none"><img src="<mt:var name="plugin_static_uri">images/top-rated.gif" alt="Your Current Themes" /><span><__trans phrase="Current Themes"></span>
</mt:if>
                        </div>
                        <div class="category" id="category-my-designs" title="<__trans phrase="Locally saved themes">" style="display: none"><img src="<mt:var name="plugin_static_uri">images/my-designs.gif" alt="my-designs" /><span><__trans phrase="Saved Themes"></span>
                        </div>
                        <div class="category" id="category-more" title="<__trans phrase="Single themes from the web">" style="display: none"><img src="<mt:var name="plugin_static_uri">images/featured.gif" alt="my-designs" /><span><__trans phrase="More Themes"></span>
                        </div>
                    </div>
                </div>

                <div id="templates-wrapper">
                    <h2 id="selected-category-title"><__trans phrase="Templates"></h2>
                    <div class="scrollbox" id="display-current" style="display: none;"></div>
                    <div class="scrollbox" id="display-my-designs" style="display: none;"></div>
                    <div class="scrollbox" id="display-more" style="display: none;"></div>
                </div>

                <div id="details-wrapper" style="display: none">
                    <h2><__trans phrase="Details"></h2>
                    <div id="display-details">
                        <div class="tc-mixer-entry"></div>
                    </div>
                </div>

                <a id="show-details" href="javascript:void(0);" onclick="return showDetails( true );" style="display: none"><__trans phrase="Show Details"></a>
                <a id="hide-details" href="javascript:void(0);" onclick="return showDetails( false );" style="display: none"><__trans phrase="Hide Details"></a>
            </div>
            
            <br class="clr" />

            <div id="select-design-controls">
<mt:unless name="single_blog">
            <select name="blog_id" id="select-blog">
            <option value=""><__trans phrase="Select a Weblog..."></option>
            <mt:loop name="blog_loop">
            <option value="<mt:var name="blog_id">"><mt:var name="blog_name"></option>
            </mt:loop>
            </select>
</mt:unless>

            <input type="button" name="choose" id="apply-button" onclick="applyDesign()" value="<__trans phrase="Apply Selected Design">" />
            </div>
            <br class="clr" />
        </div>

<mt:else>

<p class="message">
<__trans phrase="You don't appear to have any weblogs with a 'Theme Stylesheet' template that you have rights to edit. Please check your blog(s) for this template.">
</p>

</mt:if>

<mt:include name="include/footer.tmpl">
