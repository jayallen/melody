
function hideDocumentElement(id) {
    var el = document.getElementById(id);
    if (el)
        el.style.display = 'none';
}

function showDocumentElement(id) {
    var el = document.getElementById(id);
    if (el)
        el.style.display = 'block';
}

var captcha_timer;
function showAnonymousForm() {
    showDocumentElement('comments-form');
<MTIfNonEmpty tag="MTCaptchaFields">
    captcha_timer = setInterval('delayShowCaptcha()', 1000);
</MTIfNonEmpty>
}
<MTIfNonEmpty tag="MTCaptchaFields">
function delayShowCaptcha() {
    clearInterval(captcha_timer);
    var div = document.getElementById('comments-open-captcha');
    if (div)
        div.innerHTML = '<$MTCaptchaFields$>';
}
</MTIfNonEmpty>

var AUTHOR = 1;
var COMMENTER = 2;
var commenter_name;
var commenter_status;
var commenter_id;
var commenter_url
var is_preview;
var mtcmtmail;
var mtcmtauth;
var mtcmthome;

function individualArchivesOnLoad(commenter_name) {
    hideDocumentElement('comment-form-reply');
<MTIfCommentsAccepted>
<MTElse>
    hideDocumentElement('comments-open');
</MTIfCommentsAccepted>
<MTIfPingsAccepted>
<MTElse>
    hideDocumentElement('trackbacks-info');
</MTIfPingsAccepted>
<MTIfRegistrationAllowed>
    <MTIfRegistrationRequired>
    if ( commenter_status == AUTHOR  ) {
        hideDocumentElement('comment-form-name');
        hideDocumentElement('comment-form-email');
        showDocumentElement('comments-open-text');
        showDocumentElement('comments-open-footer');
    } else if ( commenter_status == COMMENTER ) {
        hideDocumentElement('comment-form-name');
        hideDocumentElement('comment-form-email');
        hideDocumentElement('comment-form-url');
        hideDocumentElement('comment-form-remember-me');
        showDocumentElement('comments-open-text');
        showDocumentElement('comments-open-footer');
    } else {
        hideDocumentElement('comments-open-data');
        hideDocumentElement('comments-open-text');
        hideDocumentElement('comments-open-footer');
    }
    <MTElse>
    // comments are allowed but registration not required
    if ( commenter_status > 0 ) {
        hideDocumentElement('comment-form-name');
        hideDocumentElement('comment-form-email');
    } else if (is_preview) {
<MTIfNonEmpty tag="MTCaptchaFields">
        delayShowCaptcha();
</MTIfNonEmpty>
    } else {
        hideDocumentElement('comments-form');
    }
    </MTIfRegistrationRequired>
</MTIfRegistrationAllowed>

    var cf = document.comments_form;
    if (cf) {
        if (!commenter_name && (cf.email != undefined) &&
            (mtcmtmail = getCookie("mtcmtmail")))
            cf.email.value = mtcmtmail;
        if (!commenter_name && (cf.author != undefined) &&
            (mtcmtauth = getCookie("mtcmtauth")))
            cf.author.value = mtcmtauth;
        if (cf.url != undefined &&
            (mtcmthome = getCookie("mtcmthome")))
            cf.url.value = mtcmthome;
        if (cf["bakecookie"]) {
            if (mtcmtauth || mtcmthome) {
                cf.bakecookie.checked = true;
            } else {
                cf.bakecookie.checked = false;
            }
        }
    }
}

function writeCommenterGreeting(commenter_name, entry_id, blog_id, commenter_id, commenter_url) {
<MTIfRegistrationAllowed>
    if ( commenter_status > 0 ) {
        var commenter_link;
        if ( commenter_status == COMMENTER ) {
            if (commenter_url) {
                commenter_link = '<a href="' + commenter_url + '">' + commenter_name + '</a>';
            } else {
                commenter_link = commenter_name;
            }
        } else if ( commenter_status == AUTHOR ) {
            if (commenter_id) {
                commenter_link = '<a href="<$MTCGIPath$><$MTCommentScript$>?__mode=edit_profile&commenter=' + commenter_id + '&blog_id=' + blog_id;
                if (entry_id) {
                    commenter_link += '&entry_id=' + entry_id;
                } else {
                    commenter_link += '&static=1';
                }
                commenter_link += '">' + commenter_name + '</a>';
            }

        }
        document.write(
            '<__trans phrase="Thanks for signing in, [_1]. Now you can comment. ([_2]sign out[_3])" params="' + commenter_link + '%%<a href="<$MTRemoteSignOutLink static="1"$>&entry_id=' + entry_id + '">%%</a>">'
        );
    } else if (commenter_name) {
        document.write('<__trans phrase="You do not have permission to comment on this blog. ([_1]sign out[_2])" params="<a href="<$MTRemoteSignOutLink static="1"$>&entry_id=' + entry_id + '">%%</a>">');
    } else {
<MTIfRegistrationRequired>
        var phrase = '<__trans phrase="[_1]Sign in[_2] to comment on this entry." params="<a href="<$MTCGIPath$><$MTCommentScript$>?__mode=login&entry_id=' + entry_id + '&blog_id=' + blog_id + '&static=1&return_to=' + encodeURIComponent(document.URL) + '">%%</a>">';
<MTElse>
        var phrase = '<__trans phrase="[_1]Sign in[_2] to comment on this entry, or [_3]comment anonymously[_2]." params="<a href="<$MTCGIPath$><$MTCommentScript$>?__mode=login&entry_id=' + entry_id + '&blog_id=' + blog_id + '&static=1&return_to=' + encodeURIComponent(document.URL) + '">%%</a>%%<a href="javascript:void(0);" onclick="showAnonymousForm();">">';
</MTIfRegistrationRequired>
        document.write(phrase);
    }
</MTIfRegistrationAllowed>
}

<MTIfRegistrationAllowed>
<$MTCGIHost exclude_port="1" setvar="cgi_host"$><$MTBlogHost exclude_port="1" setvar="blog_host"$>
<MTIf name="cgi_host" eq="$blog_host">
commenter_name = getCookie('commenter_name');
commenter_url = getCookie('commenter_url');
ids = getCookie('commenter_id').split(':');
commenter_id = ids[0];
if ( ids[1] == 'S' ) {
    commenter_status = AUTHOR;
}
else if ( ids[1] == 'N' ) {
    document.write('<script src="<$MTCGIPath$><$MTCommentScript$>?__mode=cmtr_status_js&blog_id=<$MTBlogID$>"></script>');
}
else if ( commenter_name && !commenter_id ) {
    commenter_status = COMMENTER;
}
else if ( commenter_name 
  && commenter_id
  && ( ids[1].indexOf("'<$MTBlogID$>'") > -1 ) ) {
    commenter_status = AUTHOR;
}
else {
    commenter_status = 0;
}
<MTElse>
document.write('<script src="<$MTCGIPath$><$MTCommentScript$>?__mode=cmtr_name_js&blog_id=<$MTBlogID$>"></script>');
</MTIf>
</MTIfRegistrationAllowed>

function replyComment(parent_id, author) {
    showDocumentElement('comment-form-reply');
    
    var checkbox = document.getElementById('comment-reply');

    // Clear the current label but NOT our checkbox!
    var label = document.getElementById('comment-reply-label');
    for(var i = 1; i < label.childNodes.length; i++) {
        label.removeChild(label.childNodes[i]);
    }
    
    // Populate label with new values
    var reply_text = document.createTextNode(' <__trans phrase="Replying to"> ');
    label.appendChild(reply_text);

    var anchor = document.createElement('a');
    anchor.setAttribute('href', '#comment-' + parent_id);
    anchor.innerHTML = author;
    label.appendChild(anchor);
    
    checkbox.value = parent_id; 
    checkbox.setAttribute('checked', true);
    checkbox.focus();
    
    setCommentParentID();
}

function setCommentParentID() {
    var checkbox = document.getElementById('comment-reply');
    var parent_id_field = document.getElementById('comment-parent-id');
    var pid = 0;
    
    if(checkbox.checked == true)
        pid = checkbox.value;
    
    parent_id_field.value = pid;
}


// Copyright (c) 1996-1997 Athenia Associates.
// http://www.webreference.com/js/
// License is granted if and only if this entire
// copyright notice is included. By Tomer Shiran.

    function setCookie (name, value, expires, path, domain, secure) {
        var curCookie = name + "=" + escape(value) + (expires ? "; expires=" + expires.toGMTString() : "") +
            (path ? "; path=" + path : "") + (domain ? "; domain=" + domain : "") + (secure ? "secure" : "");
        document.cookie = curCookie;
    }

    function getCookie (name) {
        var prefix = name + '=';
        var c = document.cookie;
        var nullstring = '';
        var cookieStartIndex = c.indexOf(prefix);
        if (cookieStartIndex == -1)
            return nullstring;
        var cookieEndIndex = c.indexOf(";", cookieStartIndex + prefix.length);
        if (cookieEndIndex == -1)
            cookieEndIndex = c.length;
        return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
    }

    function deleteCookie (name, path, domain) {
        if (getCookie(name))
            document.cookie = name + "=" + ((path) ? "; path=" + path : "") +
                ((domain) ? "; domain=" + domain : "") + "; expires=Thu, 01-Jan-70 00:00:01 GMT";
    }

    function fixDate (date) {
        var base = new Date(0);
        var skew = base.getTime();
        if (skew > 0)
            date.setTime(date.getTime() - skew);
    }

    function rememberMe (f) {
        var now = new Date();
        fixDate(now);
        now.setTime(now.getTime() + 365 * 24 * 60 * 60 * 1000);
        if (f.author != undefined)
           setCookie('mtcmtauth', f.author.value, now, '/', '', '');
        if (f.email != undefined)
           setCookie('mtcmtmail', f.email.value, now, '/', '', '');
        if (f.url != undefined)
           setCookie('mtcmthome', f.url.value, now, '/', '', '');
    }

    function forgetMe (f) {
        deleteCookie('mtcmtmail', '/', '');
        deleteCookie('mtcmthome', '/', '');
        deleteCookie('mtcmtauth', '/', '');
    }


// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function init() {
  // quit if this function has already been called
  if (arguments.callee.done) return;

  // flag this function so we don't do the same thing twice
  arguments.callee.done = true;

  // kill the timer
  // DWD - check against window
  if ( window._timer ) clearInterval(window._timer);
  
  // DWD - fire the window onload now, and replace it
  if ( window.onload && ( window.onload !== window.init ) ) {
    window.onload();
    window.onload = function() {};
  }
};

/* for Mozilla/Opera9 */
if (document.addEventListener) {
  document.addEventListener("DOMContentLoaded", init, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
  document.write("<script id=__ie_onload defer src=javascript:void(0)><\/script>");
  var script = document.getElementById("__ie_onload");
  script.onreadystatechange = function() {
    if (this.readyState == "complete") {
      init(); // call the onload handler
    }
  };
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
  _timer = setInterval(function() {
    if (/loaded|complete/.test(document.readyState)) {
      init(); // call the onload handler
    }
  }, 10);
}

/* for other browsers */
window.onload = init;

// END: fast browser onload init

