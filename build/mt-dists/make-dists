#!/usr/bin/perl -w
#
# $Id$
#
use strict;
use lib 'lib';
use ExtUtils::Manifest qw( maniread manicopy mkmanifest );
use File::Copy;
use File::Spec::Functions;
use File::Basename;
use Getopt::Long;

my $distlist = '';
my $langlist = $ENV{BUILD_LANGUAGE};
my $stamp = '';
my $package = 'MT';
my $skip = 'MANIFEST.SKIP';
my $skip_bak = "$skip.BAK";

GetOptions(
    'dist:s' => \$distlist,
    'language:s' => \$langlist,
    'package:s' => \$package,
    'stamp:s' => \$stamp,
) or die "Couldn't grok options";

my $orig = eval {
    $ENV{BUILD_LANGUAGE} ||= 'en_US';
    $ENV{BUILD_PACKAGE}  ||= $package;
    system('make clean');
    system('make lib/MT.pm');
    system('make lib/MT/ConfigMgr.pm');
    require MT;
    $package . '-' . MT->VERSION;
} or die "Failed to get version from package `printenv`";

my @distlist = split(/,/, $distlist);
my @languages = split(/,/, $langlist);
@languages = qw( en_US nl fr de es ja ) unless @languages;
my @libs = qw( html-template image-size file-spec file-temp uri libwww-perl cgi soap-lite );
my @licenses = qw( LICENSE-PERSONAL LICENSE-COMMERCIAL );

for my $lang (@languages) {
    print join(" ", @languages), "\n";
    my $short_lang = $lang;
    # If there are not any _'s in the language double it: xx_XX.
    my $long_lang = ($lang =~ /_/ ? $lang : $lang . '_' . uc($lang));
    # ..unless we are Japanese.
    $long_lang = 'ja' if ($lang eq 'ja');

    # Override the distribution name if we are given a stamp.
    my $distname = defined $stamp && $stamp ne ''
        ? $stamp
        : $orig . '-' . $long_lang;

#    # Make sure the environment has the language set.
    $ENV{BUILD_LANGUAGE} = $short_lang;
    print "---------------- Building " . $ENV{BUILD_LANGUAGE} . " ----------------" . "\n";
    system("make clean");  # to clean MT.pm and MT/ConfigMgr.pm
    system("make");
    die $? if $?; # XXX Not the friendliest way to fail after a system call:

    my $lang_skip = $skip .'.'. uc($lang);
    if (-e $skip) {
        move($skip, "$skip.BAK");
        move($lang_skip, $skip);
    }           

    mkmanifest();
    manicopy(maniread(), $distname, 'best');

    system("find $distname -name .exists | xargs rm");

    system("chmod +x $distname/*.cgi"); 
    system("chmod +x $distname/tools/*"); 

    system("tar cvf $distname.tar --wildcards --exclude '*.zip' $distname");
    system("gzip --best $distname.tar");
    system("zip -r $distname.zip $distname -x $distname/extras/\*.gz");
    system("rm -rf $distname");
    unlink("MANIFEST");
}

END {
    move($skip_bak, $skip) if -e $skip_bak;
}

sub shell {
    print $_[0], "\n";
    system $_[0];
}
